version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: booking-fincart-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: booking_fincart
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API (NestJS Backend)
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: booking-fincart-api
    environment:
      - NODE_ENV=production # change to development for development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=booking_fincart
      - JWT_SECRET=a91d660b54414e59a91311310e94f91f568c172fdba72c3bbecba0f82c61f4b9
      - PORT=3005
    ports:
      - "3005:3005"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Web (React Frontend)
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: booking-fincart-web
    environment:
      - API_URL=http://api:3005
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
